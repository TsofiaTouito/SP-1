CC = gcc   # the compiler  
CFLAGS = -Wall -g  #for debugging , warning messages generated by the compiler
FPIC_FLAG = -fPIC  

#default target
all: mains maindloop maindrec loopd loops recd recs


#Create static libraries
loops: libclassloops.a
recs: libclassrec.a

#Create dynamic libraries
loopd: libclassloops.so 
recd: libclassrec.so 


#build executables
mains: main.o libclassrec.a 
  $(CC) $(CFLAGS) -o mains main.o libclassrec.a 

maindloop: main.o libclassloops.so
  $(CC) $(CFLAGS) -o maindloop main.o ./libclassloops.so

maindrec: main.o libclassrec.so
  $(CC) $(CFLAGS) -o maindrec main.o ./libclassrec.so


#build static libraries
libclassloops.a : basicClassification.o advancedClassificationLoop.o 
   ar rcs libclassloops.a basicClassification.o advancedClassificationLoop.o 

libclassrec.a : basicClassification.o advancedClassificationRecursion.o
   ar rcs libclassrec.a basicClassification.o advancedClassificationRecursion.o


#build dynanic/ shared library
libclassloops.so: basicClassification.o advancedClassificationLoop.o 
   $(CC) -shared -o libclassloops.so basicClassification.o advancedClassificationLoop.o 

libclassrec.so:  basicClassification.o advancedClassificationRecursion.o
   $(CC) -shared -o libclassrec.so basicClassification.o advancedClassificationRecursion.o



#build object files
main.o: main.c NumClass.h
  $(CC) $(CFLAGS) -c main.c

basicClassification.o: basicClassification.c NumClass.h 
   $(CC) $(CFLAGS) $(FPIC_FLAG) -c basicClassification.c

advancedClassificationLoop.o: advancedClassificationLoop.c NumClass.h 
   $(CC) $(CFLAGS) $(FPIC_FLAG) -c advancedClassificationLoop.c

advancedClassificationRecursion.o: advancedClassificationRecursion.o NumClass.h 
   $(CC) $(CFLAGS) $(FPIC_FLAG) -c advancedClassificationRecursion.c


# Clean build files
clean:
  rm -f *.so *.a *.o mains maindloop maindrec
